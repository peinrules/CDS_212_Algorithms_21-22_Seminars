# Динамическое программирование -- метод решения задач, использующий (динамический) переход от меньших данных к большим.
# Дано: число N
# Нужно: посчитать количество последовательностей длины N, состоящих из 0 и 1, в которых две 1 не стоят рядом.
# ответ для N обозначим за A_N

# Для N = 1 ответ очевидно 2 (0, 1)
# Для N = 2 ответ 3 (00, 10, 01)

# Как мы делаем переход в динамике. 
# Рассмотрим все последовательности длины N. Можем их разбить на два множества:
# 1) На конце стоит 0 -- можем смотреть на всю предыдущую последовательность из N - 1 элемента. 
#       таких последовательностей ровно A_{N - 1}.
# 2) На конце стоит 1. Тогда, дабы получить хорошую последовательность на предпоследнем месте должен стоять 0. 
#       таких последовательностей ровно A_{N - 2}
# Тогда A_N = A_{N - 1} + A_{N - 2}
# Следовательно A_N = N + 2-ое число Фибоначчи.

