# Дано: доска n x m. Нужно найти число вариантов дойти конём из верхнего левого угла в правый нижний, совершая только ходы типа вправо-вниз и вниз-вправо.
# Динамика понятная: число способов попасть в клетку -- сумма числа способов попасть в две "предыдущие клетки". 
# Начальные значения -- 1 в самой первой клетке.

n, m = list(map(int, input().split()))

dp = [[0 for i in range(m)] for i in range(n)]

dp[0][0] = 1

for i in range(n):
    for j in range(m):
        if i + j == 0:
            continue
        num1 = 0
        num2 = 0
        if i - 2 >= 0 and j - 1 >= 0:
            num1 = dp[i - 2][j - 1]
        if i - 1 >= 0 and j - 2 >= 0:
            num2 = dp[i - 1][j - 2]
        dp[i][j] = num1 + num2
print(dp[n - 1][m - 1])

