# Описание: у нас есть рюкзак, вместительности N. Также у нас есть M предметов, для каждого из которых определён вес (а иногда и стоимость). 
# Задача: опмитмально набить рюкзак предметами.
# Вариации: у нас конечное число предметов. //////////////
#           каждого предмета неограниченное количество
#           предметы недискретны
#
#
# В целом рюкзак -- классическая задача на ДП. В научном плане -- не совсем. Не известно, является ли задача о рюкзаке P, NP-полной.
#
# Но базовая (как в контесте) вариация решается за полиномиальное время.
# Сейчас решаем: набить рюкзак оптимально по весу.

N, M = list(map(int, input().split())) # количество предметов и объём
data = list(map(int, input().split())) # веса
# Вопрос -- какой наибольший суммарный вес поместится в рюкзак.

dp = [0 for i in range(M + 1)] # dp[i] -- можно ли вместить в рюкзак вещей на общий объём i
dp[0] = 1
for i in range(N):
    # давайте пройдёмся по всем возможным весам (по M) и поймём, где его можно использовать
    for j in range(M, data[i] - 1, -1):
        if dp[j - data[i]] == 1: # так как у нас обратный порядок, то мы набили рюкзак на такой объём без использования data[j]
            dp[j] = 1

# вернуть максимальное i, такое что dp[i] != 0
for i in range(M, -1, -1):
    if dp[i]:
        print(i)
        break

