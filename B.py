# Дано: n -- число полос, m -- размер развилки
# Нужно посчитать число "правильных" способов движение по этим дорогам
# \1...|...m/
# |1|2|...|n|
# Правильный способ -- для каждой из полос мы задаём множество доступных направлений (из m + 1 штук)
# Способо правильный <=> С каждой полосы хоть что-то разрешено, на каждое направление можно выехать
# Есть две полосы i < j. И если с полосы i можем поехать в направление a, с полосы j в направление b, то тогда a <= b.

m, n = list(map(int, input().split()))
# Динамика следущая: dp[i][j] число вышеописанных способов, если при этом "доступно" i полос и j направлений
dp = [[0 for j in range(m)] for i in range(n)]

# инициализируем динамику для i = 0
# Одна полоса. Следовательно один способ -- машина может выехать на все направления.

for j in range(m):
    dp[0][j] = 1

for i in range(1, n):
    for j in range(m):
        # тут у нас i > 1 полос и j возможных направлений
        for k in range(j + 1):
            # допустим есть какое-то число способов разъехаться с i - 1 полосы на k направлений
            # тогда тогда с полосы j мы должны мочь разъехаться на все оставшиеся направления.
            if k == 0:
                dp[i][j] += dp[i - 1][k]
            else:
                dp[i][j] += (dp[i - 1][k] + dp[i - 1][k - 1])
print(dp[n - 1][m - 1])

